import React, { useState, useEffect } from "react";
import StoryCard from "@/components/StoryCard/StoryCard"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç StoryCard

interface Story {
  id: number;
  title: string;
  creation_at: string;
  source?: {
    name: string;
    favicon?: string;
  };
  publication_at?: string;
  category?: {
    name: string;
  };
}

const EditorialPicks = () => {
  const [stories, setStories] = useState<Story[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchEditorialPicks = async () => {
      try {
        const response = await fetch(
          "https://zn.by/api/v1/stories/?ordering=-is_pinned_order,-score&pinned=true&page_size=3"
        );

        if (!response.ok) {
          throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ '–í—ã–±–æ—Ä —Ä–µ–¥–∞–∫—Ü–∏–∏'");
        }

        const data = await response.json();
        console.log("üì• –î–∞–Ω–Ω—ã–µ –∏–∑ API:", data);

        if (Array.isArray(data.results)) {
          const formattedStories = data.results.map((story) => ({
            id: story.id,
            title: story.news_article?.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è",
            summary: story.news_article?.summary || "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", // –î–æ–±–∞–≤–ª–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ
            main_image: story.news_article?.main_image || null,
            category: story.category || { name: "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" },
            publication_at: story.news_article?.publication_at || "", // <-- –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
          }));

          setStories(formattedStories);
        } else {
          console.warn("‚ö†Ô∏è API –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", data);
        }
      } catch (error) {
        console.error("üö® –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ '–í—ã–±–æ—Ä —Ä–µ–¥–∞–∫—Ü–∏–∏':", error);
      } finally {
        setLoading(false);
      }
    };

    fetchEditorialPicks();
  }, []);

  return (
    <div className="bg-gray-100 dark:bg-gray-800 p-4 rounded-lg">
      <h2 className="text-lg font-semibold mb-4 text-gray-900 dark:text-white">
        –í—ã–±–æ—Ä —Ä–µ–¥–∞–∫—Ü–∏–∏
      </h2>

      {loading ? (
        <p className="text-gray-500 text-center">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : stories.length === 0 ? (
        <p className="text-gray-500 text-center">–ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π.</p>
      ) : (
        <div className="grid grid-cols-1 gap-4">
          {stories.map((story) => (
            <StoryCard key={story.id} story={story} /> // –ò—Å–ø–æ–ª—å–∑—É–µ–º StoryCard –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
          ))}
        </div>
      )}
    </div>
  );
};

export default EditorialPicks;
