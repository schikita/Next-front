"use client";

import React, { useState } from "react";
import { Share2 } from "lucide-react";
import html2canvas from "html2canvas";
import ShareButtons from "@/components/ShareButtons/ShareButtons"; // –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π

interface DropdownButtonProps {
  shareUrl: string;
  title: string;
  elementRef: React.RefObject<HTMLDivElement>;
}

const DropdownButton: React.FC<DropdownButtonProps> = ({ shareUrl, title, elementRef }) => {
  const [open, setOpen] = useState(false);
  const [imageUrl, setImageUrl] = useState<string | null>(null);

  const captureElement = async () => {
    if (!elementRef.current) {
      console.error("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞.");
      return;
    }

    try {
      const canvas = await html2canvas(elementRef.current, {
        useCORS: true,
        logging: true,
        scale: 2,
      });

      const img = canvas.toDataURL("image/png");
      setImageUrl(img);

      console.log("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω:", img);
    } catch (error) {
      console.error("üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:", error);
    }
  };

  const handleImageError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å
    e.target.src = '/default-image.jpg'; 
  };

  return (
    <div className="relative">
      <button
        onClick={() => {
          setOpen(true);
          captureElement(); // –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
        }}
        className="p-2 rounded-full bg-gray-200 dark:bg-gray-600 text-gray-800 dark:text-white hover:bg-gray-300 dark:hover:bg-gray-500"
      >
        <Share2 className="w-5 h-5" />
      </button>

      <ShareButtons
        open={open}
        onClose={() => setOpen(false)}
        shareUrl={shareUrl}
        title={title}
        imageUrl={imageUrl || "/default-image.jpg"} // –ï—Å–ª–∏ imageUrl –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      />
    </div>
  );
};

export default DropdownButton;
